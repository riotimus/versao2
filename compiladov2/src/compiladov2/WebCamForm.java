/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package compiladov2;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.FileDialog;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.media.NoPlayerException;
import javax.media.CannotRealizeException;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.Manager;
import javax.media.control.FrameGrabbingControl;
import javax.media.Buffer;
import javax.media.format.VideoFormat;
import javax.media.util.BufferToImage;
import javax.swing.ImageIcon;
import javax.swing.JToggleButton;
import JImage.JIResizeImage;
/**
 *
 * @author Hp
 */
public class WebCamForm extends javax.swing.JFrame {
    
    Player player;
    BufferedImage bi;
    String fn;
    
    /**
     * Creates new form WebCamForm
     */
    public WebCamForm() {
        initComponents();
        
        try 
        {
            initCamera();
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(WebCamForm.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (NoPlayerException ex) 
        {
            Logger.getLogger(WebCamForm.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (CannotRealizeException ex) 
        {
            Logger.getLogger(WebCamForm.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    private void initCamera() throws IOException, NoPlayerException, CannotRealizeException {  
        MediaLocator ml = new MediaLocator("vfw://0");
        player = Manager.createRealizedPlayer(ml);
        
        this.tbWebCam.add(player.getVisualComponent());
        player.start();
    }

    private void setImageButton(JToggleButton tbutton, Image image) { 
        tbutton.setIcon(new ImageIcon(image));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bCapture = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        lTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        tbWebCam = new javax.swing.JToggleButton();
        tbCapture = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WebCam");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bCapture.setBackground(new java.awt.Color(255, 255, 255));
        bCapture.setForeground(new java.awt.Color(102, 153, 255));
        bCapture.setText("Captura");
        bCapture.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 153, 255), 2, true));
        bCapture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCaptureActionPerformed(evt);
            }
        });
        getContentPane().add(bCapture, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 70, -1));

        bSave.setBackground(new java.awt.Color(255, 255, 255));
        bSave.setForeground(new java.awt.Color(102, 153, 255));
        bSave.setText("Armazenar");
        bSave.setToolTipText("");
        bSave.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 153, 255), 2, true));
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });
        getContentPane().add(bSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 350, 70, -1));

        lTitle.setBackground(new java.awt.Color(255, 255, 255));
        lTitle.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        lTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTitle.setText("camera detecao");
        getContentPane().add(lTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, 430, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tbWebCam.setBackground(new java.awt.Color(255, 255, 255));
        tbWebCam.setForeground(new java.awt.Color(255, 255, 255));
        tbWebCam.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 153, 255), 2, true));
        tbWebCam.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbWebCam.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        tbWebCam.setDoubleBuffered(true);
        tbWebCam.setEnabled(false);

        tbCapture.setBackground(new java.awt.Color(255, 255, 255));
        tbCapture.setForeground(new java.awt.Color(102, 153, 255));
        tbCapture.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 153, 255), 2, true));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladov2/GO_anim.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbWebCam, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tbCapture, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbCapture, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbWebCam, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCaptureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCaptureActionPerformed
        // TODO add your handling code here:
        FrameGrabbingControl fgc = (FrameGrabbingControl) player.getControl("javax.media.control.FrameGrabbingControl");
        Buffer buffer = fgc.grabFrame();
        
        BufferToImage bti = new BufferToImage((VideoFormat) buffer.getFormat());
        Image image = bti.createImage(buffer);
        
        JIResizeImage resize = new JIResizeImage();
        bi = (BufferedImage) image;
        Image imageresize = resize.rescale(bi, 210,220);
        
        this.setImageButton(this.tbCapture, imageresize);
    }//GEN-LAST:event_bCaptureActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        // TODO add your handling code here:
        FileDialog fd = new FileDialog(WebCamForm.this, "Save Image", FileDialog.SAVE);
        fd.show();
        
        if (fd.getFile() != null) 
        {
            fn = fd.getDirectory() + fd.getFile() + ".jpg";
            try
            {
                File make = new File(fn);
                try
                {
                    ImageIO.write(bi, "jpg", make);
                }
                catch (IOException ex)
                {
                    Logger.getLogger(WebCamForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            catch (Exception ex)
            {
                
            }
        }
    }//GEN-LAST:event_bSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        WebCamForm form = new WebCamForm();
        form.setVisible(true);
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WebCamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WebCamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WebCamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WebCamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WebCamForm().setVisible(true);
            }
        //</editor-fold>

        /* Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WebCamForm().setVisible(true);
            }
        });*/
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCapture;
    private javax.swing.JButton bSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lTitle;
    private javax.swing.JToggleButton tbCapture;
    private javax.swing.JToggleButton tbWebCam;
    // End of variables declaration//GEN-END:variables
}
